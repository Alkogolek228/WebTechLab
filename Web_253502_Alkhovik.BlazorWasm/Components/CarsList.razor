@inject IDataService DataService
@implements IDisposable

<div class="container-fluid">
	<table class="table">
		<thead class="thead-dark">
			<tr>
				<th scope="col">#</th>
				<th scope="col">Description</th>
				<th scope="col">Amount</th>
			</tr>
		</thead>
		<tbody>
			@if (DataService.Cars is not null && DataService.Cars.Any())
			{
				@foreach (var item in DataService.Cars)
				{
					<tr>
						<th scope="row">@item.Id</th>
						<td>@item.Description</td>
						<td>@item.Amount</td>
						<button class="btn btn-outline-secondary" @onclick="() => OnItemSelected.Invoke(item.Id)">Details</button>
					</tr>
				}
			}
			else
			{
				<span>No items</span>
			}
		</tbody> 
	</table>
</div>

@code {
	[Parameter]
	public Action<int> OnItemSelected { get; set; }

	protected override void OnInitialized()
	{
		DataService.DataLoaded += StateHasChanged;
	}

	public void Dispose()
	{
		DataService.DataLoaded -= StateHasChanged;
	}
}